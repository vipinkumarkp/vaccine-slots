{"version":3,"sources":["components/UI/Link/Link.js","components/UI/Nav/Nav.js","components/UI/Header/Header.js","components/UI/Footer/Footer.js","components/sections/VaccineSlot/spinner.js","util/search.js","HOC/Section.js","util/common.js","components/sections/VaccineSlot/index.js","components/sections/Sections.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["link","props","react_default","a","createElement","modules","className","classes","style","cursor","activeClass","to","target","spy","smooth","offset","duration","children","Nav","_useState","useState","_useState2","Object","slicedToArray","navClass","setNavClass","_useState3","_useState4","toggeledNav","settoggeledNav","useEffect","window","addEventListener","scrollY","concat","href","onClick","Link","pageType","console","log","header","UI_Nav_Nav","footer","SpinnerBlock","Spinner","color","fuzzySearch","options","fuse","Fuse","keys","threshold","value","length","search","section","id","TimeFormat","time","currentDate","Moment","format","HTML5_FMT","DATE","VaccineSlot","_React$useState","React","_React$useState2","states","setStates","_React$useState3","_React$useState4","districts","setDistricts","_React$useState5","_React$useState6","selectedState","setSelectedState","_React$useState7","_React$useState8","selectedDistrict","setSelectedDistrict","_React$useState9","_React$useState10","enableDistrict","setEnableDistrict","_React$useState11","_React$useState12","loader","setLoader","_React$useState13","_React$useState14","availableSlots","setAvailableSlots","modal","setModal","backdrop","_useState5","keyboard","_useState7","_useState8","selectedSlot","setSelectedSlot","_useState9","_useState10","visibleResults","setVisibleResults","_useState11","_useState12","enablePinCode","setEnablePinCode","_useState13","_useState14","selectedPinCode","setSelectedPinCode","toggle","searchDate","_useState15","Date","_useState16","startDate","setStartDate","fetchSlotByPinCodeData","useCallback","dId","axios","method","url","headers","content-type","then","response","data","centers","catch","error","fetchSlotData","fetchDistrictData","state_id","districtsList","map","e","i","push","district_id","label","district_name","name","fetchStateData","stateList","state_name","handleSearch","searchBy","getStateFilters","SelectSearch","filterOptions","placeholder","onChange","handleDistrictList","getDistrictFilters","handleSetDistrict","handlePincode","event","handleSlotDetails","slotObj","getPinCodeSearchButton","Col","sm","mt","alignItems","justifyContent","spinner","ButtonToggle","getDatePicker","react_datepicker_min_default","selected","date","Section","Row","md","lg","react_switch_default","checked","xs","Fragment","type","evt","dist","slot","key","availableCapacity","sessions","session","available_capacity","btnColor","fee_type","Badge","pill","from","slotsAvailable","slots","Modal","isOpen","ModalHeader","address","ModalBody","width","vaccine","min_age_limit","keyId","ModalFooter","Button","getModalData","sections","react","sections_VaccineSlot","Layout","Header","minHeight","Sections","Footer","App","components_Layout_Layout","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24ea86c8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-scroll';\n\nconst link = props => {\n  return (\n    <Link\n      className={props.classes}\n      style={{ cursor: 'pointer' }}\n      activeClass='active'\n      to={props.target}\n      spy={true}\n      smooth={true}\n      offset={props.offset || -45}\n      duration={500}\n    >\n      {props.children}\n    </Link>\n  );\n};\n\nexport default link;\n","import React, { useState, useEffect } from 'react';\n\nimport Link from '../Link/Link';\n\nconst Nav = () => {\n  const [navClass, setNavClass] = useState('');\n  const [toggeledNav, settoggeledNav] = useState(false);\n\n  const toggleNav = () => {\n    settoggeledNav(!toggeledNav);\n  };\n\n  const handleMenu = (pageType) => {\n    console.log('page', pageType)\n\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      let navClass = '';\n      if (window.scrollY >= 200) {\n        navClass = 'scrolled';\n      }\n      setNavClass(navClass);\n    });\n  }, []);\n  return (\n    <nav className={`navbar navbar-expand-md bg-light ${navClass}`}>\n      <div className='container'>\n        <a className='navbar-brand' href='/'>\n          <span>Vaccine Slot</span>\n          <i className='fas fa-circle ml-1' />\n        </a>\n        <div\n          className={`navbar-toggler nav-icon ${(() => {\n            if (toggeledNav) return 'open';\n            return '';\n          })()}`}\n          onClick={toggleNav}\n        >\n          <span />\n          <span />\n          <span />\n        </div>\n\n        <div\n          className={`collapse navbar-collapse ${(() => {\n            if (toggeledNav) return 'show';\n            return '';\n          })()}`}\n        >\n          <ul className='navbar-nav ml-auto'>\n            <li className='nav-item'>\n              <Link onClick={() => handleMenu('vaccine-slot')} target='/' offset={-120} classes='nav-link'>\n                Vaccination Center\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\n\nimport Nav from '../Nav/Nav';\n\nconst header = () => {\n  return (\n    <div className='header'>\n      <Nav />\n    </div>\n  );\n};\n\nexport default header;\n","import React from 'react';\n\nconst footer = () => {\n  return (\n    <footer className=''>\n      <div className='bottom-footer pt-3 pb-3 text-center'>\n        <small>©2021 All Right Reserved. Developed By VKP</small>\n      </div>\n    </footer>\n  );\n};\n\nexport default footer;\n","import React from 'react';\nimport { Spinner } from 'reactstrap';\n\nconst SpinnerBlock = (props) => {\n  return (\n    <div>\n      <Spinner color=\"primary\" />\n    </div>\n  );\n}\n\nexport default SpinnerBlock;","import Fuse from 'fuse.js';\n\nexport default function fuzzySearch(options) {\n    const fuse = new Fuse(options, {\n        keys: ['name', 'groupName', 'items.name'],\n        threshold: 0.3,\n    });\n\n    return (value) => {\n        if (!value.length) {\n            return options;\n        }\n\n        return fuse.search(value);\n    };\n}","import React from 'react';\n\nconst section = props => {\n  return <section id={props.id}>{props.children}</section>;\n};\n\nexport default section;\n","import Moment from 'moment';\nexport default function TimeFormat(time) {\n   const currentDate = Moment().format(Moment.HTML5_FMT.DATE); \n   return Moment(currentDate + ' '+time).format('LT');;\n}","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"react-super-responsive-table\";\nimport {\n  Row,\n  Col,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Badge,\n} from \"reactstrap\";\nimport \"react-dropdown-now/style.css\";\nimport { ButtonToggle } from \"reactstrap\";\nimport SpinnerBlock from \"./spinner\";\nimport Moment from \"moment\";\nimport SelectSearch from \"react-select-search\";\nimport \"react-select-search/style.css\";\nimport fuzzySearch from \"../../../util/search\";\nimport Section from \"../../../HOC/Section\";\nimport \"./index.scss\";\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\nimport TimeFormat from '../../../util/common';\nimport Switch from \"react-switch\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction VaccineSlot(props) {\n  let [states, setStates] = React.useState([]);\n  let [districts, setDistricts] = React.useState([]);\n  let [selectedState, setSelectedState] = React.useState(\"\");\n  let [selectedDistrict, setSelectedDistrict] = React.useState([]);\n  let [enableDistrict, setEnableDistrict] = React.useState(false);\n  let [loader, setLoader] = React.useState(false);\n  let [availableSlots, setAvailableSlots] = React.useState([]);\n  const [modal, setModal] = useState(false);\n  const [backdrop] = useState(true);\n  const [keyboard] = useState(true);\n  const [selectedSlot, setSelectedSlot] = useState([]);\n  const [visibleResults, setVisibleResults] = useState(false);\n  const [enablePinCode, setEnablePinCode] = useState(false);\n  const [selectedPinCode, setSelectedPinCode] = useState('');\n  const { className } = props;\n  const toggle = () => setModal(!modal);\n  const searchDate = Moment().format(\"DD/MM/YY\");\n  const [startDate, setStartDate] = useState(new Date());\n\n  // Fetch data from API - https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=110001&date=31-03-2021\n  const fetchSlotByPinCodeData = React.useCallback((dId) => {\n    setLoader(true);\n    axios({\n      method: \"GET\",\n      url:\n        \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=\"+dId+\"&date=\"+searchDate,\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        // if (response.data.centers)\n        setAvailableSlots(response.data.centers);\n        setLoader(false);\n        setVisibleResults(true);\n      })\n      .catch((error) => {\n        setLoader(false);\n        setVisibleResults(false);\n      });\n  }, [searchDate]);\n\n\n  const fetchSlotData = React.useCallback((dId) => {\n    setLoader(true);\n    axios({\n      method: \"GET\",\n      url:\n        \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=\" +\n        dId +\n        \"&date=\" +\n        searchDate,\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        // if (response.data.centers)\n        setAvailableSlots(response.data.centers);\n        setLoader(false);\n        setVisibleResults(true);\n      })\n      .catch((error) => {\n        setLoader(false);\n        setVisibleResults(false);\n      });\n  }, [searchDate]);\n\n  const fetchDistrictData = React.useCallback((state_id) => {\n    setLoader(true);\n    axios({\n      method: \"GET\",\n      url:\n        \"https://cdn-api.co-vin.in/api/v2/admin/location/districts/\" + state_id,\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        let districtsList = [];\n        if (response.data.districts) {\n          response.data.districts.map((e, i) =>\n            districtsList.push({\n              id: e.district_id,\n              value: e.district_id,\n              label: e.district_name,\n              name: e.district_name,\n            })\n          );\n        }\n        setEnableDistrict(true);\n        setDistricts(districtsList);\n        setLoader(false);\n      })\n      .catch((error) => {\n        setLoader(false);\n      });\n  }, []);\n\n  const fetchStateData = React.useCallback(() => {\n    setLoader(true);\n    axios({\n      method: \"GET\",\n      url: \"https://cdn-api.co-vin.in/api/v2/admin/location/states\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        let stateList = [];\n        if (response.data.states) {\n          response.data.states.map((e, i) =>\n            stateList.push({\n              id: e.state_id,\n              value: e.state_id,\n              label: e.state_name,\n              name: e.state_name,\n            })\n          );\n        }\n        setStates(stateList);\n        setLoader(false);\n      })\n      .catch((error) => {\n        setLoader(false);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetchStateData();\n  }, [fetchStateData]);\n\n  const handleDistrictList = (value) => {\n    setEnableDistrict(false);\n    fetchDistrictData(value);\n    setSelectedState(value);\n    setVisibleResults(false);\n    console.log(selectedState);\n  };\n\n  const handleSetDistrict = (value) => {\n    setSelectedDistrict(value);\n    setVisibleResults(false);\n  };\n\n  const handleSearch = (searchBy) => {\n    if (searchBy && searchBy === 'pincode') {\n      console.log('Search by pin', selectedPinCode)\n      fetchSlotByPinCodeData(selectedPinCode);\n    } else {\n      fetchSlotData(selectedDistrict);\n    }\n  };\n  const getStateFilters = () => {\n    return (\n      <SelectSearch\n        options={states}\n        search\n        filterOptions={fuzzySearch}\n        placeholder=\"Select your state\"\n        onChange={(value) => handleDistrictList(value)}\n      />\n    );\n  };\n\n  const getDistrictFilters = () => {\n    return (\n      <SelectSearch\n        options={districts}\n        search\n        filterOptions={fuzzySearch}\n        placeholder=\"Select your district\"\n        onChange={(value) => handleSetDistrict(value)}\n      />\n    );\n  };\n\n  const getPinCodeTextField = () => {\n    return (\n      <><Col className=\"form-group\" md={6} lg={6}>\n        <label >Pincode</label>\n        <input type=\"number\" className=\"form-control\" id=\"pincode\" placeholder=\"Enter pincode\" onChange={(evt) => handlePincode(evt)}/>\n        {/* <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small> */}\n      </Col>\n      <Col md={4} lg={4}>\n        {getDatePicker}\n      </Col>\n      {getPinCodeSearchButton()}\n      </>\n    )\n  }\n\n  const handlePincode = (event) => {\n    setSelectedPinCode(event.target.value);\n  }\n\n  const handleSlotDetails = (slotObj) => {\n    setSelectedSlot(slotObj);\n    toggle();\n  };\n\n  const handleSwitchChange = () => {\n    setVisibleResults(false);\n    setEnableDistrict(false);\n    setEnablePinCode(!enablePinCode);\n  }\n\n  const getPinCodeToggle = () => {\n    return (\n      <label>\n        <span>Search By PIN </span>\n        <Switch onChange={() => handleSwitchChange()} checked={enablePinCode} />\n      </label>\n    );\n  }\n\n\n\n  const getAvailableCenters = () => {\n\n    return (\n      <Table>\n        <Thead>\n          <Tr>\n            <Th>#</Th>\n            <Th>Center</Th>\n            <Th>Fee</Th>\n            <Th>Availability</Th>\n            <Th>Time</Th>\n            <Th>Status</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {availableSlots.map((slot, key) => {\n            let availableCapacity = 0;\n            slot.sessions.map((session) => {\n              availableCapacity += session.available_capacity;\n              return true;\n            });\n            let btnColor = 'success';\n            if (availableCapacity < 10 && availableCapacity > 0) {\n              btnColor = 'danger';\n            } else if (availableCapacity > 10 && availableCapacity < 75) {\n              btnColor = 'warning';\n            } else if (availableCapacity === 0) {\n              btnColor = 'dark'\n            }\n            return (\n              <Tr key={\"slot-\" + key}>\n                <Td className=\"pt-2\">{key + 1}</Td>\n                <Td className=\"pt-2\">{slot.name}\n                  {/* <br/>{slot.address.length > 35 ? slot.address.substring(0, 35) + \"...\" : slot.address} */}\n                </Td>\n                <Td className=\"pt-2\">{slot.fee_type}</Td>\n                <Td>\n\n                  <Badge pill color={btnColor} onClick={() => handleSlotDetails(slot)}>\n                    {availableCapacity}\n                  </Badge>\n                </Td>\n                <Td className=\"pt-2\">\n                  {TimeFormat(slot.from)} - {TimeFormat(slot.to)}\n                </Td>\n                <Td className=\"pt-2\" style={{ cursor: 'pointer' }}>\n                  <Badge color=\"info\" onClick={() => handleSlotDetails(slot)}>\n                    Details\n                  </Badge>\n                </Td>\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n    );\n  };\n  const getPinCodeSearchButton = () => {\n    return (\n      <Col\n        sm={2}\n        className=\"d-flex mt-3\"\n        mt={3}\n        style={{ alignItems: \"center\", justifyContent: \"center\" }}\n      >\n        <h3> </h3>\n        <div className=\"rdn\">\n          {loader ? (\n            <SpinnerBlock />\n          ) : (\n            <ButtonToggle\n              color=\"primary\"\n              onClick={() => {\n                handleSearch('pincode');\n              }}\n            >\n              Search\n            </ButtonToggle>\n          )}\n        </div>\n      </Col>\n    )\n  };\n\n  const getSearchButton = () => {\n    return (\n      <Col\n        sm={2}\n        className=\"d-flex  mt-2\"\n        mt={2}\n        style={{ alignItems: \"flex-end\", justifyContent: \"center\" }}\n      >\n        <h3> </h3>\n        <div className=\"rdn\">\n          {loader ? (\n            <SpinnerBlock />\n          ) : (\n            <ButtonToggle\n              color=\"primary\"\n              onClick={() => {\n                handleSearch();\n              }}\n            >\n              Search\n            </ButtonToggle>\n          )}\n        </div>\n      </Col>\n    )\n  };\n\n  const getDatePicker = () => {\n    return (\n      <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n    );\n  }\n\n  const getResults = () => {\n    return (\n      visibleResults &&\n      <div>\n        <h4 className=\"mt-3\">Slot & Sessions</h4>\n        <div className=\"widget-padding-md\">\n          <Row>\n            <Col lg={12} md={12} sm={12}>\n            { availableSlots && availableSlots.length > 0 && (<p>\n                Total{\" \"}\n                <b>\n                  <code>{availableSlots && availableSlots.length}</code>{\" \"}\n                </b>\n                  vaccination centers available now.\n                </p>)}\n              {availableSlots && availableSlots.length > 0\n                ? getAvailableCenters()\n                : \"No Vaccination center is available for booking.\"}\n            </Col>\n          </Row>\n        </div>\n      </div>)\n\n  }\n\n\n\n  const slotFinder = () => {\n    return (<><Col sm={5} className=\"mt-2\" mt={2}>\n      <h6>State</h6>\n      {/* {getStateFilter()} */}\n      {getStateFilters()}\n    </Col>\n      {enableDistrict && <Col sm={5} className=\"mt-2\" mt={2}>\n        <h6>District</h6>\n        {getDistrictFilters()}\n      </Col>\n      }{getSearchButton()}</>\n\n    )\n  };\n\n  const getModalData = () => {\n    let slotsAvailable = 0;\n    selectedSlot.sessions.map((session) => {\n      slotsAvailable += session.slots.length;\n      return true;\n    });\n    return (\n      <Modal\n        isOpen={modal}\n        toggle={toggle}\n        className={className}\n        backdrop={backdrop}\n        keyboard={keyboard}\n      >\n        <ModalHeader toggle={toggle}><span><b>{selectedSlot && selectedSlot.name}</b> - {selectedSlot && selectedSlot.address}(#<b>{slotsAvailable}</b>) slots</span>\n        </ModalHeader>\n        <ModalBody>\n          <Table>\n            <Thead>\n              <Tr>\n                <Th style={{ width: '12%' }}>Date</Th>\n                <Th style={{ width: '12%' }}>Vaccine</Th>\n                <Th style={{ width: '14%' }}>From Age</Th>\n                <Th style={{ width: '15%' }}>Availability</Th>\n                <Th>Slots</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {selectedSlot.sessions.map((session, key) => {\n                let btnColor = 'success';\n                const availableCapacity = session.available_capacity\n                if (availableCapacity < 10 && availableCapacity > 0) {\n                  btnColor = 'danger';\n                } else if (availableCapacity > 10 && availableCapacity < 75) {\n                  btnColor = 'warning';\n                } else if (availableCapacity === 0) {\n                  btnColor = 'dark'\n                }\n                return (\n                  <Tr key={\"slots-block-\" + key}>\n                    <Td className=\"pt-2\">{session.date}</Td>\n                    <Td className=\"pt-2\"><Badge href=\"#\" color=\"info\">{session.vaccine}</Badge></Td>\n                    <Td className=\"pt-2\">{session.min_age_limit}+</Td>\n                    <Td>\n                      <Badge pill color={btnColor}>\n                        {availableCapacity}\n                      </Badge>\n                    </Td>\n                    <Td className=\"pt-2\">\n                      {session.slots.map((slot, keyId) => {\n                        return (<span key={\"slot-time\" + keyId}><Badge pill href=\"#\" color=\"success\">{slot}</Badge> {\" \"}</span>)\n                      })}\n                    </Td>\n\n                  </Tr>\n                );\n              })}\n            </Tbody>\n          </Table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  };\n\n  return (\n    <Section id=\"contact\">\n      <div className=\"container pt-2 pb-5\">\n        <div className=\"section-header pt-5 pb-5 text-center\"></div>\n        <div className=\"section-content\">\n          <div className=\"row\">\n            <div className=\"col-md-12 col-lg-12 mr-auto ml-auto\">\n              <Row>\n                <Col md={6} lg={6}>\n                  <h4 className=\"page-title\">\n                    Vaccine Slot -{\" \"}\n                    <span className=\"fw-semi-bold\">Availability</span>\n                  </h4>\n                </Col>\n                <Col md={6} lg={6} className=\"pincode_toggle\">\n                  {getPinCodeToggle()}\n                </Col>\n              </Row>\n\n              <Row>\n                <Col xs={12} lg={12}>\n                  <div className=\"widget-padding-md\">\n                    <Row>\n                      {enablePinCode ? getPinCodeTextField() : slotFinder()}\n                      { }\n                    </Row>\n                    {getResults()}\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n        {modal && getModalData()}\n      </div>\n    </Section>\n  );\n}\n\nexport default VaccineSlot;\n","import React, { Fragment } from 'react';\nimport VaccineSlot from './VaccineSlot/index';\n\nconst sections = () => {\n  return (\n    <Fragment>\n      <VaccineSlot />\n    </Fragment>\n  );\n};\n\nexport default sections;\n","import React, { Fragment } from 'react';\n\nimport Header from '../UI/Header/Header';\nimport Footer from '../UI/Footer/Footer';\nimport Sections from '../sections/Sections';\n\nconst Layout = () => {\n  return (\n    <Fragment>\n      <Header />\n      <main style={{minHeight: '100vh'}}>\n        <Sections />\n      </main>\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\n\nimport Layout from './components/Layout/Layout';\n\nfunction App() {\n  return <Layout />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './scss/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}